<?php

/**
 * @file mymodule.module
 * Implements hook functions.
 */

/**
 * Implements hook_help().
 */
function mymodule_help($path, $arg) {
  switch ($path) {
    // Main module help for the block module
    case 'admin/help#block':
      return '<p>' . t('Blocks are boxes of content rendered into an area, or region, of a web page. The default theme Bartik, for example, implements the regions "Sidebar first", "Sidebar second", "Featured", "Content", "Header", "Footer", etc., and a block may appear in any one of these areas. The <a href="@blocks">blocks administration page</a> provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions.', array('@blocks' => url('admin/structure/block'))) . '</p>';

    // Help for another path in the block module
    case 'admin/structure/block':
      return '<p>' . t('This page provides a drag-and-drop interface for assigning a block to a region, and for controlling the order of blocks within regions. Since not all themes implement the same regions, or display regions in the same way, blocks are positioned on a per-theme basis. Remember that your changes will not be saved until you click the <em>Save blocks</em> button at the bottom of the page.') . '</p>';
  }
}

/**
 * Impelements hook_permission().
 */
function mymodule_permission() {
  return array(
    'administer mymodule' => array(
      'title' => t('Administer My Module'),
      'description' => t('Perform administration tasks for contact person information.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function mymodule_menu() {
  $items = array();

  $items['admin/mymodule/config'] = array(
    'title' => 'My Module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mymodule_settings_form'),
    'file' => 'mymodule.admin.inc',
    'file path' => drupal_get_path('module', 'mymodule') . '/includes',
    'access arguments' => array('administer mymodule'),
  );

  return $items;
}

/**
 * Implements hook_ctools_plugin_api().
 *
 * Supports hook_default_mymodule().
 */
function mymodule_ctools_plugin_api($module, $api) {
  if ($module == 'mymodule' && $api == 'default_mymodule') {
    return array(
      'version' => 1,
      'path' => drupal_get_path('module', 'mymodule') . '/includes',
    );
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function mymodule_ctools_plugin_directory($module, $plugin_type) {
  if ($module == 'mymodule') {
    return 'includes';
  }
}

/**
 * Implements hook_block_info().
 */
function mymodule_block_info() {
  // This example comes from node.module.
  $blocks['mymodule'] = array(
    'info' => t('Contact Person (provided by My Module)'),
    'cache' => DRUPAL_CACHE_GLOBAL, // cache for every page.
  );

  return $blocks;
}

/**
 * Implements hook_theme().
 */
function mymodule_theme($existing, $type, $theme, $path) {
  return array(
    'mymodule_contact_person' => array(
      'variables' => array(
        'name' => '',
        'email' => '',
        'address' => '',
        'country' => '',
      ),
      'template' => 'mymodule',
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function mymodule_block_view($delta = '') {
  // This example is adapted from node.module.
  $block = array();

  switch ($delta) {
    case 'mymodule':
      global $language;
      ctools_include('export');
      $data = ctools_export_load_object('mymodule', 'conditions', array('language' => $language->language));
      $datum = $data[$language->language];
      $country = country_load($datum->country);
      $datum->country = $country->name;

      $block['subject'] = t('Contact person');
      $block['content'] = theme('mymodule_contact_person', (array)$datum);
      break;
  }
  return $block;
}

/**
 * Implements hook_block_configure().
 */
function mymodule_block_configure($delta = '') {
  // This example comes from node.module.
  $form = array();
  if ($delta == 'recent') {
    $form['node_recent_block_count'] = array(
      '#type' => 'select',
      '#title' => t('Number of recent content items to display'),
      '#default_value' => variable_get('node_recent_block_count', 10),
      '#options' => drupal_map_assoc(array(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 30)),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function mymodule_block_save($delta = '', $edit = array()) {
  // This example comes from node.module.
  if ($delta == 'recent') {
    variable_set('node_recent_block_count', $edit['node_recent_block_count']);
  }
}
